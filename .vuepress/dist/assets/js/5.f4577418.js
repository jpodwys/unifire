(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{351:function(t,a,s){"use strict";s.r(a);var e=s(43),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"unifire"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unifire"}},[t._v("#")]),t._v(" unifire")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://travis-ci.org/jpodwys/unifire",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://travis-ci.org/jpodwys/unifire.svg?branch=master",alt:"Build Status"}}),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://codecov.io/gh/jpodwys/unifire",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://codecov.io/gh/jpodwys/unifire/branch/master/graph/badge.svg",alt:"codecov"}}),s("OutboundLink")],1)]),t._v(" "),s("h1",{attrs:{id:"docs-are-current-a-wip"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docs-are-current-a-wip"}},[t._v("#")]),t._v(" Docs are current a WIP")]),t._v(" "),s("h1",{attrs:{id:"table-of-contents"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#table-of-contents"}},[t._v("#")]),t._v(" Table of Contents")]),t._v(" "),s("p",[t._v("Features\nGuide\nCounter App\nTodo App\nIntegrations\nAPI")]),t._v(" "),s("h1",{attrs:{id:"features"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#features"}},[t._v("#")]),t._v(" Features")]),t._v(" "),s("h2",{attrs:{id:"tiny"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tiny"}},[t._v("#")]),t._v(" Tiny")]),t._v(" "),s("p",[t._v("400 (brotli-compressed) bytes. No dependencies.")]),t._v(" "),s("h2",{attrs:{id:"simple"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#simple"}},[t._v("#")]),t._v(" Simple")]),t._v(" "),s("p",[t._v("Everything you need is right here in one package. Including the constructor, Unifire has four public methods and one public property.")]),t._v(" "),s("h2",{attrs:{id:"flexibility"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flexibility"}},[t._v("#")]),t._v(" Flexibility")]),t._v(" "),s("p",[t._v("From single-store global state management all the way to a per-model multi-store setup, Unifire's got you covered.")]),t._v(" "),s("h2",{attrs:{id:"typescript-support"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#typescript-support"}},[t._v("#")]),t._v(" TypeScript support")]),t._v(" "),s("p",[t._v("The types are strong with this one. (This is my first go at making a "),s("code",[t._v("d.ts")]),t._v(" file, so contributions are appreciated.)")]),t._v(" "),s("h2",{attrs:{id:"efficient"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#efficient"}},[t._v("#")]),t._v(" Efficient")]),t._v(" "),s("p",[t._v("Unifire only calls a subscriber when one of its dependencies changes.")]),t._v(" "),s("h2",{attrs:{id:"derived-state"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#derived-state"}},[t._v("#")]),t._v(" Derived state")]),t._v(" "),s("p",[t._v('Also referred to as "computed properties," Unifire allows you to subscribe directly to store-level derivations. Check out how simple Unifire\'s computed properties are:')]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("doubled")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Done! No we have "),s("code",[t._v("doubled")]),t._v(", a computed property, to which we can subscribe. Any time "),s("code",[t._v("count")]),t._v(" changes, Unifire will call all of "),s("code",[t._v("doubled")]),t._v("'s subscribers.")]),t._v(" "),s("p",[t._v("And, since you're wondering, yes you can have computed properties that depend on computed properties like-a-so:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("doubled")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("quadrupled")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" doubled "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" doubled "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"sync-and-async-actions-in-one"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sync-and-async-actions-in-one"}},[t._v("#")]),t._v(" Sync and Async actions--in one")]),t._v(" "),s("p",[t._v("Unifire doesn't care what you do in your actions--it'll handle it. Take, for example, this extremely common workflow:")]),t._v(" "),s("ol",[s("li",[t._v("Show a loading indicator")]),t._v(" "),s("li",[t._v("Fetch some data")]),t._v(" "),s("li",[t._v("Hide the loading indicator")])]),t._v(" "),s("p",[t._v("Note that showing a loading indicator is a synchronous state update while fetching data and hiding the loading indicator are both asynchronous. Here's what it looks like in Unifire:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fetchData")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" state "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("loading "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("asyncCall")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("loading "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("There are two nice things about this example. First, Unifire does not require you to separate your actions into sync and async bits--just write your code how you want to write it. Second, despite the fact that this action makes three state mutations, Unifire will intelligently batch them into two state updates. When you activate the loading state, Unifire will call all subscribers listening to "),s("code",[t._v("state.loading")]),t._v(". Then, when "),s("code",[t._v("data")]),t._v(" is assigned and "),s("code",[t._v("loading")]),t._v(" is set back to false, Unifire will call all subscribers listening to one or both of "),s("code",[t._v("state.data")]),t._v(" and "),s("code",[t._v("state.loading")]),t._v(".")]),t._v(" "),s("p",[t._v("Another common workflow might be to pop up a toast that dismisses itself after a few seconds. You can do that with a single action too.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("showToast")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" state "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" message")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toast "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toast "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"composable-actions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#composable-actions"}},[t._v("#")]),t._v(" Composable actions")]),t._v(" "),s("h2",{attrs:{id:"subscribe-to-properties-not-commits"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#subscribe-to-properties-not-commits"}},[t._v("#")]),t._v(" Subscribe to properties not commits")]),t._v(" "),s("h2",{attrs:{id:"register-store-modules-at-runtime-for-code-splitting"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#register-store-modules-at-runtime-for-code-splitting"}},[t._v("#")]),t._v(" Register store modules at runtime for code splitting")]),t._v(" "),s("h2",{attrs:{id:""}},[s("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])])])}),[],!1,null,null,null);a.default=n.exports}}]);